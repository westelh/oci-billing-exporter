# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Publish container image

on:
  push:
    branches:
      - main

jobs:
  push:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Build dockerfile
      run: ./gradlew dockerCreateDockerfile

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        version: "lab:latest"
        driver: cloud
        endpoint: "westelh/ci-cd"

    - name: Get version from gradle
      id: version
      run: echo version=$(./gradlew properties | awk '/^version:/ {print $2}') >> $GITHUB_OUTPUT

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        tags: "westelh/oci-billing-exporter:${{ steps.version.outputs.version }}"
        context: build/docker
        push: true
        # For pull requests, export results to the build cache.
        # Otherwise, push to a registry.
        outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry' }}
