# Default values for oci-billing-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/westelh/oci-billing-exporter
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

config:
  target: "xxxxxxx"
  server:
    port: 2112
    host: 0.0.0.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 2112

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /metrics
    port: http
  initialDelaySeconds: 5
readinessProbe:
  httpGet:
    path: /metrics
    port: http
  initialDelaySeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# CRDs for prometheus-operator
monitoring:
  # ServiceMonitor for Prometheus Operator
  serviceMonitor:
    # If enabled, creates a ServiceMonitor
    enabled: false
    # NamespaceSelector for ServiceMonitor
    namespaceSelector: {}
    # Annotations for ServiceMonitor
    annotations: {}
    # Labels for ServiceMonitor
    labels: {}
    # ScrapeInterval
    interval: 15s
    # Timeout for scraping metrics
    scrapeTimeout: null
    # RelabelConfig allows dynamic rewriting of the label set for targets, alerts, scraped samples and remote write samples.
    # See https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    relabelings: []
    # MetricRelabelConfigs to apply to samples before ingestion.
    # See https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint
    metricRelabelings: []
    # Scheme to use when scraping
    scheme: http
    # serviceMonitor will use this for health checking
    tlsConfig: null
    # MetricsInstanc resources for Grafana Operator
    metricsInstance:
      enabled: false
      annotations: {}
      labels: {}
      remoteWrite: null
  
  # Dashboard for Grafana(by grafana-operator)
  grafanaDashboard:
    enabled: false
    additionalLabels: {}
  
  # Rules for Prometheus Operator
  rules: {}